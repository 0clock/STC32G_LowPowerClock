C251 COMPILER V5.60.0,  time                                                               24/04/24  23:59:21  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE time
OBJECT MODULE PLACED IN ..\firmware\time.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE time.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) OBJECT(..\firmwar
                    -e\time.obj) 

stmt  level    source

    1          #include "time.h"
    2          #include "DATA.h"
    3          #include "OLED.h"
    4          
    5          /****************************** 睡眠寄存器组 ***********************************/
    6          extern u16 Sleep_Queue[Sleep_queue_num];
    7          
    8          
    9          void Timer0Init(void)   //1毫秒@35MHz
   10          {
   11   1          AUXR |= 0x80;   //定时器时钟1T模式
   12   1          TMOD &= 0xF0;   //设置定时器模式
   13   1          TL0 = 0x48;   //设置定时初始值
   14   1          TH0 = 0x77;   //设置定时初始值
   15   1          TF0 = 0;    //清除TF0标志
   16   1          ET0 = 1;    //使能定时器中断
   17   1          TR0 = 1;    //定时器0开始计时
   18   1      }
   19          
   20          
   21          
   22          //========================================================================
   23          // 函数: void delay_ms(u8 ms)
   24          // 描述: 延时函数。
   25          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
   26          // 返回: none.
   27          // 版本: VER1.0
   28          // 日期: 2013-4-1
   29          // 备注:
   30          //========================================================================
   31          void delay_ms(u8 ms)
   32          {
   33   1          u16 i;
   34   1          do {
   35   2              i = MAIN_Fosc / 10000;
   36   2              while(--i);   //10T per loop
   37   2          } while(--ms);
   38   1      }
   39          
   40          void Delay()
   41          {
   42   1          int i;
   43   1      
   44   1          for (i=0; i<100; i++)
   45   1          {
   46   2              _nop_();
   47   2              _nop_();
   48   2              _nop_();
   49   2              _nop_();
   50   2          }
   51   1      }
   52          
   53          
   54          
   55          void Delay10us()    //@35MHz
   56          {
   57   1        unsigned long i;
   58   1      
C251 COMPILER V5.60.0,  time                                                               24/04/24  23:59:21  PAGE 2   

   59   1        _nop_();
   60   1        _nop_();
   61   1        _nop_();
   62   1        i = 173UL;
   63   1        while (i) i--;
   64   1      }
   65          
   66          void Delay50us()    //@35MHz
   67          {
   68   1        unsigned long i;
   69   1      
   70   1        _nop_();
   71   1        i = 436UL;
   72   1        while (i) i--;
   73   1      }
   74          
   75          
   76          //========================================================================
   77          // 函数: void Sleep_delay_us(u8 ms)
   78          // 描述: 掉电唤醒延时函数。
   79          // 参数: us
   80          // 返回: none.
   81          // 版本: VER1.0
   82          // 日期: 2013-4-1
   83          // 备注:
   84          //========================================================================
   85          void Sleep_delay_HalfMs(u16 ms)
   86          {
   87   1        if(ms <= 32767)
   88   1        {
   89   2         ms |= 0x8000;   
   90   2         WKTCL = (ms | 0x0001);
   91   2         WKTCH = ms>>8; 
   92   2        }
   93   1      }
   94          
   95          
   96          
   97          
   98          
   99          
  100          
  101          
  102          void Sleep_delay_Time(u16 sleep_dat)
  103          {
  104   1          u16 kk=0;
  105   1          u16 uu = 0;
  106   1          while(sleep_dat)
  107   1          { 
  108   2            Sleep_delay_HalfMs(sleep_dat);
  109   2          _nop_();
  110   2          _nop_();
  111   2          _nop_();
  112   2          _nop_();    
  113   2          PD = 1;                            //MCU进入掉电模式
  114   2          _nop_();
  115   2          _nop_();
  116   2          _nop_();
  117   2          _nop_();
  118   2            WKTCH &= 0x7f;
  119   2            kk = WKTCH;
  120   2            kk = kk*256;
  121   2            kk = kk + WKTCL;  
  122   2            if(kk == 0)
  123   2            {
  124   3              sleep_dat = 0;
C251 COMPILER V5.60.0,  time                                                               24/04/24  23:59:21  PAGE 3   

  125   3            }       
  126   2            else
  127   2            {
  128   3      //        if(sleep_dat >= kk)
  129   3      //        {
  130   3              sleep_dat = sleep_dat - kk;
  131   3      //        }
  132   3      //        if(sleep_dat == 1 || (sleep_dat & 0x8000)>0)
  133   3      //        {
  134   3      //           sleep_dat =2;
  135   3      //        } 
  136   3            }
  137   2             //nian(uu++,6);
  138   2            //Delay50us();
  139   2            _nop_();
  140   2          }
  141   1          
  142   1      }
  143          
  144          
  145          
  146          
  147          
  148          
  149          
  150          
  151          
  152          void Sleep_Thread()
  153          {
  154   1          if(RFF() > 0)
  155   1          {
  156   2              Sleep_delay_Time(Sleep_Queue[0]);
  157   2              //SleepQueue_MoveLeft(1);
  158   2          }
  159   1          else
  160   1          {
  161   2                WKTCH &= 0x7f;
  162   2                
  163   2                
  164   2                _nop_();
  165   2                _nop_();
  166   2                _nop_();
  167   2                _nop_();      
  168   2                PCON = 0x02;                            //MCU进入掉电模式
  169   2                _nop_();
  170   2                _nop_();
  171   2                _nop_();
  172   2                _nop_();
  173   2          } 
  174   1      }
  175          
  176          
  177          
  178          
  179          
  180          
  181          
  182          
  183          
  184          
  185          
  186          
  187          
  188          
  189          
  190          
C251 COMPILER V5.60.0,  time                                                               24/04/24  23:59:21  PAGE 4   

  191          
  192          
  193          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       185     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
