C251 COMPILER V5.60.0,  UART1                                                              24/01/24  00:35:54  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN UART1.OBJ
COMPILER INVOKED BY: C:\Keil_v51\C251\BIN\C251.EXE UART1.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) 

stmt  level    source

    1          #include "UART1.h"
    2          #include "time.h"
    3          
    4          u8 xdata DMABuffer[96];
    5          u8 xdata DMABufferRX[32];
    6          
    7          /*************  本地变量声明  功能寄存器  **************/
    8          extern u16 xdata JCQ03_00[32];
    9          extern u16 Sleep_Queue_task[Sleep_queue_num];
   10          extern u16 Sleep_Queue[Sleep_queue_num];
   11          
   12          //========================================================================
   13          //
   14          //    UART1超时变量
   15          //
   16          //========================================================================
   17          
   18          
   19          
   20          void DMA_Config(void)
   21          {
   22   1          P_SW2 |= 0x80;
   23   1          DMA_UR1T_CFG = 0x80;              // bit7 1:启用中断
   24   1          DMA_UR1T_STA = 0x00;              //清空中断
   25   1          DMA_UR1T_AMT = 31;                // 自动发送字节数 = n+1
   26   1          DMA_UR1T_TXAH = (u8)((u16)&DMABuffer >> 8);
   27   1          DMA_UR1T_TXAL = (u8)((u16)&DMABuffer);  
   28   1          DMA_UR1T_CR = 0x80; 
   29   1      
   30   1          DMA_UR1R_CFG = 0x80;              // bit7 1:启用中断
   31   1          DMA_UR1R_STA = 0x00;              //清空中断
   32   1          DMA_UR1R_AMT = 31;                // 自动接收字节数 = n+1
   33   1          DMA_UR1R_RXAH = (u8)((u16)&DMABufferRX >> 8);
   34   1          DMA_UR1R_RXAL = (u8)((u16)&DMABufferRX);
   35   1          DMA_UR1R_CR = 0xa1;               // 自动接收
   36   1      }
   37          
   38          void UART1_config() // ѡձҨ͘Ê, 2: ʹԃTimer2ضҨ͘Ê, Ǥֵ̼: ʹԃTimer1ضҨ͘Ê.
   39          {
   40   1          TR1 = 0;
   41   1          AUXR &= ~0x01;     // S1 BRT Use Timer1;
   42   1          AUXR |= (1 << 6);  // Timer1 set as 1T mode
   43   1          TMOD &= ~(1 << 6); // Timer1 set As Timer
   44   1          TMOD &= ~0x30;     // Timer1_16bitAutoReload;
   45   1          TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) / 256);
   46   1          TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate1) % 256);
   47   1          ET1 = 0;      //޻ֹא׏
   48   1          INTCLKO &= ~0x02; //һˤԶʱד
   49   1          TR1 = 1;
   50   1          SCON = (SCON & 0x3f) | 0x40; // UART1ģʽ, 0x00: ͬҽӆλˤԶ, 0x40: 8λ˽ߝ,ࠉҤҨ͘Ê, 0x80: 9λ˽
             -ߝ,ڌ֨Ҩ͘Ê, 0xc0: 9λ˽ߝ,ࠉҤҨ͘Ê
   51   1          //  PS  = 1;    //ٟԅЈܶא׏
   52   1          //  ES  = 1;    //Պѭא׏
   53   1          REN = 1; //Պѭޓ˕
   54   1          P_SW1 &= 0x3f;
   55   1          P_SW1 |= 0x00; // UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 0x80: P1.6 P1.7, 0xC0: P4.3 P4.4
   56   1      }
   57          
   58          
C251 COMPILER V5.60.0,  UART1                                                              24/01/24  00:35:54  PAGE 2   

   59          void UART1_TX(u8 num)
   60          {
   61   1          DMA_UR1T_AMT = num-1;
   62   1          DMA_UR1T_CR = 0xc0;
   63   1      
   64   1         
   65   1      }
   66          
   67          
   68          
   69          
   70          
   71          
   72          void UART1_DMA()
   73          {
   74   1        if (DMA_UR1T_STA & 0x01)  //发送完成
   75   1        {
   76   2          DMA_UR1T_STA &= ~0x01;
   77   2      
   78   2      
   79   2        }
   80   1        if (DMA_UR1T_STA & 0x04)  //数据覆盖
   81   1        {
   82   2          DMA_UR1T_STA &= ~0x04;
   83   2        }
   84   1        
   85   1        if (DMA_UR1R_STA & 0x01)  //接收完成
   86   1        {
   87   2          DMA_UR1R_STA &= ~0x01;
   88   2          DMA_UR1R_CR = 0x00;
   89   2          DMA_UR1R_CR = 0xa1; 
   90   2      
   91   2        }
   92   1        if (DMA_UR1R_STA & 0x02)  //数据丢弃
   93   1        {
   94   2          DMA_UR1R_STA &= ~0x02;
   95   2        }
   96   1      }
   97          
   98          
   99          void UART1_TX_task()
  100          {
  101   1        u8 i = 0;
  102   1        DMA_UR1T_AMT = 95;
  103   1        for(i=0;i<96;i++)
  104   1        {
  105   2           DMABuffer[i] = (u8)Sleep_Queue_task[i];
  106   2        }   
  107   1          DMABuffer[95]  = 0xff;
  108   1          DMA_UR1T_CR = 0xc0;
  109   1          delay_ms(250);
  110   1          delay_ms(250);
  111   1      }
  112          
  113          void UART1_TX_task2()
  114          {
  115   1        u8 i = 0;
  116   1        DMA_UR1T_AMT = 95;
  117   1        for(i=0;i<96;i++)
  118   1        {
  119   2           DMABuffer[i] = (u8)Sleep_Queue[i];
  120   2        }   
  121   1          DMABuffer[95]  = 0xBB;
  122   1          DMA_UR1T_CR = 0xc0;
  123   1          delay_ms(250);
  124   1          delay_ms(250);
C251 COMPILER V5.60.0,  UART1                                                              24/01/24  00:35:54  PAGE 3   

  125   1      }
  126          
  127          
  128          void UART1_bit(u8 dat)
  129          {
  130   1          DMA_UR1T_AMT = 0;
  131   1          DMABuffer[0]  = dat;
  132   1         DMA_UR1T_CR = 0xc0;
  133   1      }
  134          
  135          
  136          
  137          
  138          
  139          
  140          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       446     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       128     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
