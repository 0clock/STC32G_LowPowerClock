C251 COMPILER V5.60.0,  Main_Menu                                                          25/04/24  00:23:36  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Main_Menu
OBJECT MODULE PLACED IN Main_Menu.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Main_Menu.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) 

stmt  level    source

    1          #include "Main_Menu.h"
    2          #include "OLED.h"
    3          #include "DATA.h"
    4          
    5          extern u16 dat00[System_data_num];
    6          extern u16 dat00_low[System_data_num];
    7          extern u8 xdata dat00_flag[System_data_num];
    8          
    9          
   10          /****************************** Áù°Áú†ÂØÑÂ≠òÂô®ÁªÑ ***********************************/
   11          extern u16 Sleep_Queue[Sleep_queue_num];
   12          extern u16 Sleep_Queue_count;
   13          extern u16 Sleep_Queue_count_target;
   14          extern u16 Sleep_Queue_task[Sleep_queue_num];
   15          
   16          //******************************************************************************
   17          //
   18          //    ÊòæÁ§∫‰∏ªÁïåÈù¢
   19          //
   20          //******************************************************************************
   21          
   22          
   23          
   24          //========================================================================
   25          // ÂáΩÊï∞: void UI_main(u8 num1)
   26          // ÊèèËø∞: ‰∏ªËèúÂçïÁöÑÂàùÂßãÂåñÂíåÊªöÂä®
   27          // ÂèÇÊï∞: num1 ÂæÄÂì™ËæπÊªöÂä®
   28          // ËøîÂõû: 
   29          // ÁâàÊú¨: V1.0 2023.02.05
   30          //========================================================================
   31          void UI_main(u8 num1)
   32          {
   33   1          u8 num = 0;
   34   1          u8 yyy = 0;
   35   1          yyy = (u8)(49-dat00[0x12]);
   36   1          if(dat00[0x13] == 0x0000) yyy = 0;
   37   1          if(num1)
   38   1          {
   39   2              OLED_32X32(0,0,(u8)((dat00_low[0x14] - 1) % 16),yyy,32);
   40   2              OLED_32X32((u8)(48-yyy),0,(u8)(dat00_low[0x14] % 16),0,32);
   41   2              OLED_32X32((u8)(96-yyy),0,(u8)((dat00_low[0x14] + 1) % 16),0,32);
   42   2              OLED_32X32((u8)(144-yyy),0,(u8)((dat00_low[0x14] + 2) % 16),0,(u8)(yyy-16));
   43   2          }
   44   1          else
   45   1          {
   46   2              OLED_32X32(0,0,(u8)((dat00_low[0x14] - 2) % 16),(u8)(47-yyy),32);
   47   2              OLED_32X32(yyy,0,(u8)((dat00_low[0x14] - 1) % 16),0,32);
   48   2              OLED_32X32((u8)(48 + yyy),0,(u8)(dat00_low[0x14] % 16),0,32);
   49   2              OLED_32X32((u8)(96+yyy),0,(u8)((dat00_low[0x14] + 1) % 16),0,(u8)(32-yyy));
   50   2          }
   51   1          if(dat00[0x12] == dat00[0x13])
   52   1          {
   53   2              num = (u8)((dat00[0x11] % 16)<<2);
   54   2              OLED_16X16(32,5,num);
   55   2              OLED_16X16(48,5,(u8)(num+1));
   56   2              OLED_16X16(64,5,(u8)(num+2));
   57   2              OLED_16X16(80,5,(u8)(num+3));
   58   2          }
   59   1      }
C251 COMPILER V5.60.0,  Main_Menu                                                          25/04/24  00:23:36  PAGE 2   

   60          
   61          
   62          //========================================================================
   63          // ÂáΩÊï∞: void IU_Main_Menu()
   64          // ÊèèËø∞: ‰∏ªËèúÂçïÈÄªËæë+ÊªöÂä®Â§ÑÁêÜ
   65          // ÂèÇÊï∞: 
   66          // ËøîÂõû: 
   67          // ÁâàÊú¨: V1.0 2023.02.05
   68          //========================================================================
   69          void IU_Main_Menu()
   70          {
   71   1        if(dat00[0x10] == 0x0000 && dat00[0x1A] == 0)//Âú®‰∏ªËèúÂçï‰∏î‰∏çÂú®‰∏âÁ∫ßËèúÂçï
   72   1          {
   73   2              if(dat00[0x14] != dat00_low[0x14] && ((dat00[0x13] & 0x0004) == 0))//‰∏ªËèúÂçïÁïåÈù¢ÁßªÂä®Ëß¶Âèë
   74   2              {
   75   3                  dat00[0x15] = dat00[0x14];
   76   3                  dat00[0x13] |= 0x0004;
   77   3              }
   78   2              if(dat00[0x13] & 0x0004)//‰∏ªËèúÂçïÁïåÈù¢ÁßªÂä®Ëß¶Âèë
   79   2              {
   80   3      
   81   3                  if(dat00[0x12] == 0x0000)//Ê≤°ÊúâÂú®ÊªöÂä®
   82   3                  {
   83   4                      if((dat00[0x13] & 0x0001)== 0x0000)
   84   4                      {
   85   5                          dat00[0x12] = 48;//ÁßªÂä®ËÆ°Êï∞Âô®Ë£ÖÂ°´48ÔºåË°®Á§∫Ë¶ÅÁßªÂä®48Ê¨°
   86   5      
   87   5                          fast_SleepQueue_aheadW1(6,1,49);//È¢ÑÁ∫¶48+1‰∏™6msÁöÑ‰ªªÂä°1ÔºåÂ§öÂá∫Êù•ÁöÑ‰∏Ä‰∏™ÊòØÁ
             -î®Êù•Ê£ÄÊµãÊåâÈîÆÊúâÊ≤°ÊúâÈïøÊåâÁöÑ
   88   5      
   89   5                          dat00[0x0006] |= 0x0002;
   90   5                          dat00[0x13] |= 0x0001;
   91   5                          dat00[0] |= 0x0100;
   92   5                      }
   93   4                  }
   94   3                  //dat00_flag[0x01]  = 0;
   95   3                  if((dat00[0x12] != 0x0000) && (dat00[0x13] & 0x0001))//ÈúÄË¶ÅÁßªÂä®
   96   3                  {
   97   4                      if(dat00[0x15] > dat00_low[0x14])//ÊñπÂêëÂà§Êñ≠
   98   4                      {
   99   5                          UI_main(1);
  100   5                          dat00[0x13] |= 0x0002;
  101   5                      }
  102   4                      else if(dat00[0x15] < dat00_low[0x14])//ÊñπÂêëÂà§Êñ≠
  103   4                      {
  104   5                          UI_main(0);
  105   5                          dat00[0x13] &= 0xFFFD;
  106   5      
  107   5                      }
  108   4                      dat00[0x12]--;
  109   4                      if(dat00[0x12] == 0x0000)//ÁßªÂä®ÁªìÊùü
  110   4                      {
  111   5                          dat00[0x13] &= 0xfffe;
  112   5                          dat00[0x13] &= 0xfffB;
  113   5                          dat00[0] |= 0x0100;
  114   5                          dat00[0x0006] &= ~0x0002;
  115   5                        
  116   5                          //SleepQueue_behindW(15,1);
  117   5      
  118   5                          if(dat00[0x15] > dat00_low[0x14])//‰∏Ä‰∫õËæπÁïåÂÄºÁöÑÂà§Êñ≠ÂíåÂ§ÑÁêÜ
  119   5                          {
  120   6                              dat00_low[0x14]++;
  121   6      
  122   6                              if(dat00_low[0x14] > 0x8010 && dat00[0x14] > 0x8010)
  123   6                              {
  124   7                                  dat00_low[0x14]=(dat00_low[0x14] % 16) + 0x8000;
C251 COMPILER V5.60.0,  Main_Menu                                                          25/04/24  00:23:36  PAGE 3   

  125   7                                  dat00[0x14]=(dat00[0x14] % 16) + 0x8000;
  126   7                              }
  127   6                          }
  128   5                          else if(dat00[0x15] < dat00_low[0x14])
  129   5                          {
  130   6                              dat00_low[0x14]--;
  131   6                              if(dat00_low[0x14] < 0x7FF0 && dat00[0x14] < 0x7FF0)
  132   6                              {
  133   7                                  dat00_low[0x14]=(dat00_low[0x14] % 16) + 0x8000;
  134   7                                  dat00[0x14]=(dat00[0x14] % 16) + 0x8000;
  135   7                              }
  136   6                          }
  137   5                          if(dat00[0x14] == dat00_low[0x14])//ÁßªÂä®ÁªìÊùüÂêéÔºåÂ¶ÇÊûúÊ£ÄÊµãÂà∞+ÊàñËÄÖ-ËøòÊåâ‰Ω
             -èÁöÑËØùÂàôÁªßÁª≠+1ÊàñËÄÖ-1ÔºåËß¶ÂèëÁªßÁª≠ÁßªÂä®
  138   5                          {
  139   6                              if(!P45)
  140   6                              {
  141   7                                  data00_Change(0x14,1);
  142   7                              }
  143   6                              if(!P27)
  144   6                              {
  145   7                                  data00_Change(0x14,0);
  146   7                              }
  147   6                          }
  148   5                      }
  149   4                  }
  150   3      
  151   3              }
  152   2          }
  153   1      }
  154          
  155          
  156          
  157          //========================================================================
  158          // ÂáΩÊï∞: void IU_Main_Menu_Switch()
  159          // ÊèèËø∞: ‰∏Ä‰∫õÊ†áÂøó‰ΩçÁöÑÊ∏ÖÈô§ÂíåÂàáÊç¢ÔºåÁî®‰∫éËèúÂçïÁïåÈù¢‰πãÈó¥ÁöÑÂàáÊç¢Ôºå‰πãÂâçÁöÑÂáÜÂ§áÂ∑•‰Ωú
  160          // ÂèÇÊï∞: 
  161          // ËøîÂõû: 
  162          // ÁâàÊú¨: V1.0 2023.02.05
  163          //========================================================================
  164          void IU_Main_Menu_Switch()
  165          {
  166   1          dat00[0x12] = 0;
  167   1          dat00[0x13] = 0;
  168   1          dat00[0x0006] &= ~0x0002;
  169   1          dat00[0] |= 0x0100;
  170   1          dat00_low[0x14]=dat00[0x11]  + 0x8000;
  171   1          dat00[0x14] = dat00_low[0x14];
  172   1          dat00[0x15] = dat00[0x14];
  173   1      
  174   1      
  175   1      
  176   1      }
  177          
  178          
  179          
  180          
  181          
  182          
  183          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       782     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
C251 COMPILER V5.60.0,  Main_Menu                                                          25/04/24  00:23:36  PAGE 4   

  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
