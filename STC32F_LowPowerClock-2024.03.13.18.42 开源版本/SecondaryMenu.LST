C251 COMPILER V5.60.0,  SecondaryMenu                                                      25/04/24  00:23:37  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SecondaryMenu
OBJECT MODULE PLACED IN SecondaryMenu.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE SecondaryMenu.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) 

stmt  level    source

    1          #include "SecondaryMenu.h"
    2          #include "OLED.h"
    3          #include "DATA.h"
    4          
    5          extern u16 dat00[System_data_num];
    6          extern u16 dat00_low[System_data_num];
    7          extern u8 xdata dat00_flag[System_data_num];
    8          extern u16 xdata dat00_max[System_data_num];
    9          
   10          /****************************** 睡眠寄存器组 ***********************************/
   11          extern u16 Sleep_Queue[Sleep_queue_num];
   12          extern u16 Sleep_Queue_count;
   13          extern u16 Sleep_Queue_count_target;
   14          
   15          extern u8  UI_dat[8][16];
   16          
   17          
   18          u8 p=0;
   19          
   20          
   21          
   22          //========================================================================
   23          // 函数: u16 UI_S_F(char a)
   24          // 描述: 返回光标选中的 菜单选项字符 在点阵数组中的位置
   25          // 参数: a ：菜单光标增加或者减少的数量
   26          // 返回: dat
   27          // 版本: V1.0 2023.02.05
   28          //========================================================================
   29          u16 UI_S_F(char a)
   30          {
   31   1          u16 dat = 0;
   32   1          dat = ((dat00_low[0x17] + a) % GET_SCdat()) * 8;
   33   1          return dat;
   34   1      }
   35          
   36          //========================================================================
   37          // 函数: UI_S_F2(char a)
   38          // 描述: 获取当前光标指向dat00数组中的值的数组标号
   39          // 参数: a ：菜单光标增加或者减少的数量
   40          // 返回: dat
   41          // 版本: V1.0 2023.02.05
   42          //========================================================================
   43          u16 UI_S_F2(char a)
   44          {
   45   1          u16 dat = 0;
   46   1          dat = ((dat00_low[0x17] + a) % GET_SCdat());
   47   1          dat = dat + 1 + GET_SC();
   48   1          return dat;
   49   1      }
   50          
   51          //========================================================================
   52          // 函数: void UIData_fill(u16 a)
   53          // 描述: 二级菜单选项 数值的装填
   54          // 参数: a:光标指向哪个值 b：闹钟相关，开源代码中已移除
   55          // 返回: 
   56          // 版本: V1.0 2023.02.05
   57          //========================================================================
   58          void UIData_fill(u16 a)
   59          {
C251 COMPILER V5.60.0,  SecondaryMenu                                                      25/04/24  00:23:37  PAGE 2   

   60   1          if(dat00_max[a] & 0x0040)
   61   1          {
   62   2              OLED_Mean2_fill(8,0);//不显示数值，比如说设置
   63   2          }
   64   1          else if((dat00_max[a] & 0x003F) == 1)
   65   1          {
   66   2              OLED_Mean2_fill2((u8)dat00[a]);//填充开关符号
   67   2          }
   68   1          else
   69   1          {
   70   2              OLED_Mean2_fill_num2(a);//填充数值
   71   2          }
   72   1      
   73   1      
   74   1      
   75   1      }
   76          
   77          //========================================================================
   78          // 函数: void UI_SeMenu_Cursor_num(char num,u8 x,u8 yy1,u8 yy2,u8 a)
   79          // 描述: 二级菜单选项 填充/中文显示或者数值显示
   80          // 参数: num:光标偏移  x：x坐标
   81          // 返回: 
   82          // 版本: V1.0 2023.02.05
   83          //========================================================================
   84          void UI_SeMenu_Cursor_num(char num,u8 x,u8 yy1,u8 yy2,u8 a)
   85          {
   86   1          u8 address = 0;
   87   1          u16 address2 = 0;
   88   1          u16 address3 = 0;
   89   1          address3 = UI_S_F(num);
   90   1          if(x==0)//显示左边的中文选项
   91   1          {
   92   2              if(dat00[0x10] == 0x0008 && dat00[0x009E] == 1)//闹钟相关
   93   2              {
   94   3                  UIData_fill(address3/8);
   95   3                  address = 0x60;
   96   3                  address2 = 0;
   97   3              }
   98   2              else
   99   2              {
  100   3                  address = dat00[0x11];
  101   3                  address2 = address3;
  102   3              }
  103   2          }
  104   1          else
  105   1          {
  106   2              if(dat00[0x10] == 1 || dat00[0x10] == 2 || dat00[0x10] == 4 || dat00[0x10] == 3 || dat00[0x10] ==
             - 0x0B || dat00[0x10] == 0x0D || dat00[0x10] == 0x07)//设置哪个可以进入二级菜单
  107   2              {
  108   3                  UIData_fill(UI_S_F2(num));
  109   3                  address2 = 0;
  110   3                  address = 0x60;
  111   3              }
  112   2              else if(dat00[0x10] == 15)
  113   2              {
  114   3                  address = 0x40;
  115   3                  address2 = address3;
  116   3              }
  117   2          }
  118   1          OLED_16_16Vabc(TVR(address),address2,x,yy1,yy2,a,8);  //填充信息图案
  119   1      
  120   1      }
  121          
  122          
  123          //========================================================================
  124          // 函数: void UI_SeMenu_Cursor_num_2(char num,u8 yy1,u8 yy2,u8 a)
C251 COMPILER V5.60.0,  SecondaryMenu                                                      25/04/24  00:23:37  PAGE 3   

  125          // 描述: 二级菜单显示一行
  126          // 参数: num：光标偏移 
  127          // 返回: 
  128          // 版本: V1.0 2023.02.05
  129          //========================================================================
  130          void UI_SeMenu_Cursor_num_2(char num,u8 yy1,u8 yy2,u8 a)
  131          {
  132   1          UI_SeMenu_Cursor_num(num,0,yy1,yy2,a);//左边一半
  133   1          UI_SeMenu_Cursor_num(num,64,yy1,yy2,a);//右边一半
  134   1      }
  135          
  136          
  137          
  138          
  139          //========================================================================
  140          // 函数: void UI_SecondaryMenu_G_1()
  141          // 描述: 开关型变量变化刷新右边的值
  142          // 参数: 
  143          // 返回: 
  144          // 版本: V1.0 2023.02.05
  145          //========================================================================
  146          void UI_SecondaryMenu_G_1()
  147          {
  148   1          if(dat00[0] & 0x0400)
  149   1          {
  150   2              UI_SeMenu_Cursor_num(0,64,24,24,1);
  151   2              if(dat00[0x10] == 0x0002)
  152   2              {
  153   3                  if(dat00[0x3F] == 0x0004)
  154   3                  {
  155   4                      dat00[0x0036] ^= 0x0001;
  156   4                      UI_SeMenu_Cursor_num(1,64,48,48,1);
  157   4                  }
  158   3                  else if(dat00[0x3F] == 0x0005)
  159   3                  {
  160   4                      dat00[0x0035] ^= 0x0001;
  161   4                      UI_SeMenu_Cursor_num(-1,64,0,0,0);
  162   4                  }
  163   3              }
  164   2              dat00[0] &= ~0x0400;
  165   2          }
  166   1      
  167   1      }
  168          
  169          
  170          
  171          //========================================================================
  172          // 函数: void UI_SecondaryMenu_G()
  173          // 描述: 二级菜单右侧刷新函数，查看值的时候刷新数值
  174          // 参数: 
  175          // 返回: 
  176          // 版本: V1.0 2023.02.05
  177          //========================================================================
  178          void UI_SecondaryMenu_G()
  179          {
  180   1          u8 yy = 0;
  181   1          UI_SeMenu_Cursor_num(-1,64,0,yy,0);//当前光标选中-1行
  182   1          yy =  24;
  183   1          UI_SeMenu_Cursor_num(0,64,yy,yy,1);//当前光标选中行
  184   1          yy = 48 ;
  185   1          UI_SeMenu_Cursor_num(1,64,yy,yy,1);//当前光标选中+1行
  186   1      
  187   1      }
  188          
  189          
  190          //========================================================================
C251 COMPILER V5.60.0,  SecondaryMenu                                                      25/04/24  00:23:37  PAGE 4   

  191          // 函数: void UI_SecondaryMenu(u8 a)
  192          // 描述: 二级菜单滚动刷新函数
  193          // 参数: a：向哪个方向滚
  194          // 返回: 
  195          // 版本: V1.0 2023.02.05
  196          //========================================================================
  197          void UI_SecondaryMenu(u8 a)
  198          {
  199   1          u8 dat1 = 0;
  200   1          u8 dat2 = 0;
  201   1          u8 yy = 0;
  202   1      
  203   1      
  204   1          if(a)
  205   1          {
  206   2              if(dat00[0x12] > 8 | dat00[0x13] == 0)
  207   2              {
  208   3                  yy = 24 - (dat00[0x12] - 1) ;
  209   3                  if(dat00[0x13] == 0) yy = 0;
  210   3      
  211   3                  UI_SeMenu_Cursor_num_2(-1,0,yy,0);
  212   3      
  213   3              }
  214   2      
  215   2              yy =  (dat00[0x12] - 1) + dat2;
  216   2              if(dat00[0x13] == 0) yy = 24;
  217   2      
  218   2              UI_SeMenu_Cursor_num_2(0,yy,yy,1);
  219   2      
  220   2              yy = 24 + (dat00[0x12] - 1) + dat2;
  221   2              if(dat00[0x13] == 0) yy = 48;
  222   2      
  223   2              UI_SeMenu_Cursor_num_2(1,yy,yy,1);
  224   2      
  225   2              if(dat00[0x13] != 0)
  226   2              {
  227   3                  yy = 48 + (dat00[0x12] - 1);
  228   3      
  229   3                  UI_SeMenu_Cursor_num_2(2,yy,yy,1);
  230   3              }
  231   2          }
  232   1          else
  233   1          {
  234   2              if(dat00[0x12] <16)
  235   2              {
  236   3                  yy =(dat00[0x12] - 1);
  237   3                  UI_SeMenu_Cursor_num_2(-2,0,yy,0);
  238   3              }
  239   2      
  240   2              yy =  24 - (dat00[0x12] - 1);
  241   2              UI_SeMenu_Cursor_num_2(-1,yy,yy,1);
  242   2      
  243   2      
  244   2              yy = 48 - (dat00[0x12] - 1);
  245   2              UI_SeMenu_Cursor_num_2(0,yy,yy,1);
  246   2      
  247   2              yy = 72 - (dat00[0x12] - 1);
  248   2              UI_SeMenu_Cursor_num_2(1,yy,yy,1);
  249   2      
  250   2          }
  251   1          if(dat00[0x10] != 0x000F && !(dat00[0x10] == 0x0008 && dat00[0x009E] == 1))
  252   1          {
  253   2      
  254   2              if((dat00[0x13] == 0 || dat00[0x12] == 1) && (P45 && P27))
  255   2              {
  256   3                  dat1  = ((dat00[0x17] ) % GET_SCdat()) * 8;
C251 COMPILER V5.60.0,  SecondaryMenu                                                      25/04/24  00:23:37  PAGE 5   

  257   3                  OLED_16_16V2(TVR((u8)(dat00[0x10]-1)),dat1,0,3,0);
  258   3              }
  259   2          }
  260   1      
  261   1      }
  262          
  263          
  264          //========================================================================
  265          // 函数: void IU_Secondary()
  266          // 描述: 同主菜单，参考主菜单，懒得写了
  267          // 参数: 
  268          // 返回: 
  269          // 版本: V1.0 2023.02.05
  270          //========================================================================
  271          void IU_Secondary()
  272          {
  273   1          if(dat00[0x10] > 0 && dat00[0x10] < 16 && dat00[0x1A] == 0)
  274   1          {
  275   2              if(dat00[0x17] != dat00_low[0x17] && ((dat00[0x13] & 0x0004) == 0))//二级菜单移动触发
  276   2              {
  277   3                  dat00[0x18] = dat00[0x17];
  278   3                  dat00[0x13] |= 0x0004;
  279   3              }
  280   2              if(dat00[0x13] & 0x0004)//二级菜单移动触发
  281   2              {
  282   3                  if(dat00[0x12] == 0x0000)
  283   3                  {
  284   4                      if((dat00[0x13] & 0x0001)== 0x0000)
  285   4                      {
  286   5                          dat00[0x12] = 24;
  287   5                          fast_SleepQueue_aheadW1(15,1,25);//申请24+1个UI移动事件
  288   5                          dat00[0x13] |= 0x0001;
  289   5                          dat00[0x0006] |= 0x0002;
  290   5                          dat00[0] |= 0x0100;
  291   5      
  292   5                      }
  293   4                  }
  294   3                  if((dat00[0x12] != 0x0000) && (dat00[0x13] & 0x0001))
  295   3                  {
  296   4      
  297   4                      if(dat00[0x18] > dat00_low[0x17])
  298   4                      {
  299   5                          UI_SecondaryMenu(1);
  300   5                          dat00[0x13] |= 0x0002;
  301   5                      }
  302   4                      else if(dat00[0x18] < dat00_low[0x17])
  303   4                      {
  304   5                          UI_SecondaryMenu(0);
  305   5                          dat00[0x13] &= 0xFFFD;
  306   5      
  307   5                      }
  308   4                      dat00[0x12]--;
  309   4                      if(dat00[0x12] == 0x0000)
  310   4                      {
  311   5                          dat00[0x0006] &= ~0x0002;
  312   5                          dat00[0] |= 0x0100;
  313   5                          dat00[0x13] &= 0xfffe;
  314   5                          dat00[0x13] &= 0xfffB;
  315   5                          //SleepQueue_behindW(15,1);
  316   5      
  317   5                          dat00[GET_SC() + 0x0f] = dat00[0x17] % GET_SCdat();
  318   5                          if(dat00[0x18] > dat00_low[0x17])
  319   5                          {
  320   6                              dat00_low[0x17]++;
  321   6      
  322   6                              if((dat00_low[0x17] > (dat00[GET_SC()] << 2)) && (dat00[0x17] > (dat00[GET_SC()] 
C251 COMPILER V5.60.0,  SecondaryMenu                                                      25/04/24  00:23:37  PAGE 6   

             -<< 2)))
  323   6                              {
  324   7                                  dat00_low[0x17]=(dat00_low[0x17] % dat00[GET_SC()]) + (dat00[GET_SC()] << 1);
  325   7                                  dat00[0x17]=(dat00[0x17] % dat00[GET_SC()]) + (dat00[GET_SC()] << 1);
  326   7                              }
  327   6                          }
  328   5                          else if(dat00[0x18] < dat00_low[0x17])
  329   5                          {
  330   6                              dat00_low[0x17]--;
  331   6                              if(dat00_low[0x17] < dat00[GET_SC()] && dat00[0x17] < dat00[GET_SC()])
  332   6                              {
  333   7                                  dat00_low[0x17]=(dat00_low[0x17] % dat00[GET_SC()]) + (dat00[GET_SC()] << 1);
  334   7                                  dat00[0x17]=(dat00[0x17] % dat00[GET_SC()]) + (dat00[GET_SC()] << 1);
  335   7                              }
  336   6                          }
  337   5                          if(dat00[0x17] == dat00_low[0x17])
  338   5                          {
  339   6                              if(!P45)
  340   6                              {
  341   7                                  data00_Change(0x17,1);
  342   7                              }
  343   6                              if(!P27)
  344   6                              {
  345   7                                  data00_Change(0x17,0);
  346   7                              }
  347   6                          }
  348   5                      }
  349   4      
  350   4                  }
  351   3      
  352   3      
  353   3      
  354   3              }
  355   2      
  356   2      
  357   2          }
  358   1      
  359   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1462     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         1          4
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         5     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
