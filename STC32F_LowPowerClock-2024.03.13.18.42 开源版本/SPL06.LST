C251 COMPILER V5.60.0,  SPL06                                                              25/04/24  00:23:37  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SPL06
OBJECT MODULE PLACED IN SPL06.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE SPL06.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) 

stmt  level    source

    1          #include "IIC.h"
    2          #include "SPL06.h"
    3          #include "time.h"
    4          #include "DATA.h"
    5          #include "UART1.h"
    6          
    7          extern u8 xdata DMABuffer[96];
    8          extern u32 xdata JCQ06_00[10];
    9          extern u16 Sleep_Queue_task[Sleep_queue_num];
   10          
   11          u8 SPL06_C0R_DATA[18]= {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};//气压计校准数据
   12          
   13          
   14          u16 c0 =0;
   15          u16 c1 =0;
   16          
   17          u32 c00 =0;
   18          u32 c10 =0;
   19          
   20          u16    c01 =0;
   21          u16    c11 =0;
   22          
   23          u16    c20 =0;
   24          u16    c21 =0;
   25          
   26          u16    c30 =0;
   27          
   28          
   29            
   30            
   31            
   32            
   33            
   34          
   35          //========================================================================
   36          // 函数: SPL06_Init()
   37          // 描述: 初始化
   38          // 参数:
   39          // 返回:
   40          // 版本: V1.0 2024.02.12
   41          //========================================================================
   42          void SPL06_Init()
   43          {
   44   1          IIC_W2bit(SPL06_W,0x0C,0x09);//09初始化  80：从FIFO中读出所有数据后，写入'1'以清除
             -所有旧数据。
   45   1          Sleep_delay_Time(20);
   46   1          IIC_W2bit(SPL06_W,0x08,0x00);//待机模式
   47   1          IIC_W2bit(SPL06_W,0x06,0x00);//配置气压采样
   48   1          IIC_W2bit(SPL06_W,0x07,0x00);//配置温度采样
   49   1          IIC_W2bit(SPL06_W,0x09,0x00);//
   50   1          Sleep_delay_Time(20);
   51   1          SPL06_C0R();
   52   1      }
   53          
   54          
   55          
   56          
   57          //========================================================================
   58          // 函数: u16 ABS_12bit(u16 dat)
C251 COMPILER V5.60.0,  SPL06                                                              25/04/24  00:23:37  PAGE 2   

   59          // 描述: 把12位数据转换为16位正数
   60          // 参数: dat
   61          // 返回: u16
   62          // 版本: V1.0 2024.02.12
   63          //========================================================================
   64          u16 ABS_12bit(u16 dat)
   65          {
   66   1          if(dat & 0x0800)
   67   1          {
   68   2              dat = (0x0fff - dat +1);
   69   2          }
   70   1          return dat;
   71   1      
   72   1      }
   73          //========================================================================
   74          // 函数: u16 ABS_12bit(u16 dat)
   75          // 描述: 把16位数据转换为16位正数
   76          // 参数: dat
   77          // 返回: u16
   78          // 版本: V1.0 2024.02.12
   79          //========================================================================
   80          u16 ABS_16bit(u16 dat)
   81          {
   82   1          if(dat & 0x8000)
   83   1          {
   84   2              dat = (0xffff - dat +1);
   85   2          }
   86   1          return dat;
   87   1      
   88   1      }
   89          //========================================================================
   90          // 函数: u16 ABS_12bit(u16 dat)
   91          // 描述: 把20位数据转换为32位正数
   92          // 参数: dat
   93          // 返回: u32
   94          // 版本: V1.0 2024.02.12
   95          //========================================================================
   96          u32 ABS_20bit(u32 dat)
   97          {
   98   1          if(dat & 0x00080000)
   99   1          {
  100   2              dat = (0x000fffff - dat +1);
  101   2          }
  102   1          return dat;
  103   1      
  104   1      }
  105          
  106          
  107          //========================================================================
  108          // 函数: void SPL06_C0R()
  109          // 描述: 读取传感器校准值
  110          // 参数: 
  111          // 返回:
  112          // 版本: V1.0 2023.02.05
  113          //========================================================================
  114          void SPL06_C0R()
  115          {
  116   1          u8 i = 0;
  117   1          Start(); //发送起始命令
  118   1          SendData(SPL06_W);                             //发送设备地址+写命令
  119   1          RecvACK();
  120   1          SendData(0x10);                             //发送设备地址+写命令
  121   1          RecvACK();
  122   1          delay_ms(1);
  123   1          Start(); //发送起始命令
  124   1          SendData(SPL06_R);                             //发送设备地址+写命令
C251 COMPILER V5.60.0,  SPL06                                                              25/04/24  00:23:37  PAGE 3   

  125   1          RecvACK();
  126   1          for(i=0; i<18; i++)
  127   1          {
  128   2              SPL06_C0R_DATA[i] = RecvData();
  129   2              if(i != 17) SendACK();
  130   2              else if(i == 17) SendNAK();
  131   2          }
  132   1      
  133   1      
  134   1      
  135   1      
  136   1      
  137   1      
  138   1      
  139   1          c0 = ((((u16)SPL06_C0R_DATA[0])<<8) |  SPL06_C0R_DATA[1])>>4;  //
  140   1          c0 = ABS_12bit(c0);
  141   1      
  142   1          c1 = ((((u16)SPL06_C0R_DATA[1])<<8) & 0x0f00) +  SPL06_C0R_DATA[2] ;  //
  143   1          c1 = ABS_12bit(c1);
  144   1      
  145   1          c00 = (((u32)SPL06_C0R_DATA[3])<<12) + (((u32)SPL06_C0R_DATA[4])<<4)+ (SPL06_C0R_DATA[5]>>4);
  146   1          c00 = ABS_20bit(c00);
  147   1      
  148   1      
  149   1          c10 = ((((u32)SPL06_C0R_DATA[5])<<16) & 0x000F0000)+ (((u32)SPL06_C0R_DATA[6])<<8)+ SPL06_C0R_DATA[7]
             -;
  150   1          c10 = ABS_20bit(c10);
  151   1      
  152   1          c01 = (((u16)SPL06_C0R_DATA[8])<<8) + SPL06_C0R_DATA[9];
  153   1          c01 =ABS_16bit(c01);
  154   1      
  155   1          c11 = (((u16)SPL06_C0R_DATA[10])<<8) + SPL06_C0R_DATA[11];
  156   1          c11 =ABS_16bit(c11);
  157   1      
  158   1      
  159   1          c20 = (((u16)SPL06_C0R_DATA[12])<<8) + SPL06_C0R_DATA[13];
  160   1          c20 =ABS_16bit(c20);
  161   1      
  162   1          c21 = (((u16)SPL06_C0R_DATA[14])<<8) + SPL06_C0R_DATA[15];
  163   1          c21 =ABS_16bit(c21);
  164   1      
  165   1          c30 = (((u16)SPL06_C0R_DATA[16])<<8) + SPL06_C0R_DATA[17];
  166   1          c30 =ABS_16bit(c30);
  167   1      }
  168          
  169          
  170          //========================================================================
  171          // 函数: void SPL06_PR(u8 cmd,u8 dat)
  172          // 描述: 0x01,0x00 气压，0x02,0x03 温度
  173          // 参数: 
  174          // 返回:
  175          // 版本: V1.0 2023.02.05
  176          //========================================================================
  177          void SPL06_PR(u8 cmd,u8 dat)// 0x01,0x00 气压，0x02,0x03 温度
  178          {
  179   1          u32 dat1 = 0;
  180   1          IIC_W2bit(SPL06_W,0x08,cmd);//测量温度
  181   1          delay_ms(6);
  182   1          Start(); //发送起始命令
  183   1          SendData(SPL06_W);                             //发送设备地址+写命令
  184   1          RecvACK();
  185   1          SendData(dat);                             //发送设备地址+写命令
  186   1          RecvACK();
  187   1          Start(); //发送起始命令
  188   1          SendData(SPL06_R);                             //发送设备地址+写命令
  189   1          RecvACK();
C251 COMPILER V5.60.0,  SPL06                                                              25/04/24  00:23:37  PAGE 4   

  190   1      
  191   1          dat1 = RecvData();                           //发送设备地址+写命令
  192   1          SendACK();
  193   1          dat1 = dat1<<8;
  194   1          dat1 += RecvData();                           //发送设备地址+写命令
  195   1          SendACK();
  196   1          dat1 = dat1<<8;
  197   1          dat1 += RecvData();                           //发送设备地址+写命令
  198   1          SendNAK();
  199   1          Stop();
  200   1          JCQ06_00[cmd+1] = dat1;
  201   1      }
  202          
  203          //========================================================================
  204          // 函数: void SPL06_Math_P(u32 dat3,u32 dat2)
  205          // 描述: 计算气压数据
  206          // 参数: 
  207          // 返回:
  208          // 版本: V1.0 2023.02.05
  209          //========================================================================
  210          void SPL06_Math_P(u32 dat3,u32 dat2)//dat3气压
  211          {
  212   1          u32 dat4;
  213   1      
  214   1          dat2 = (dat2<<12) / k_pt_1;
  215   1          dat3 = ((0x00ffffff - dat3 +1)<<12)/ k_pt_1;
  216   1          dat4 =c00 + ((dat3 *(c10 - ((dat3 *(c20 - ((dat3 * c30)>>12)))>>12)))>>12) - ((dat2 * c01)>>12) - (((
             -(dat3 * dat2)>>2) * (c11 + ((dat3*c21)>>12)))>>22);
  217   1          JCQ06_00[4] = dat4;
  218   1      
  219   1      }
  220          
  221          
  222          
  223          
  224          //========================================================================
  225          // 函数: void SPL06_R2(u8 cmd,u8 dat)
  226          // 描述: 读取温度或气压原始数据
  227          // 参数: 
  228          // 返回:
  229          // 版本: V1.0 2023.02.05
  230          //========================================================================
  231          void SPL06_R2(u8 cmd,u8 dat)
  232          {
  233   1          u32 dat1 = 0;
  234   1          Start(); //发送起始命令
  235   1          SendData(SPL06_W);                             //发送设备地址+写命令
  236   1          RecvACK();
  237   1          SendData(dat);                             //发送设备地址+写命令
  238   1          RecvACK();
  239   1          Start(); //发送起始命令
  240   1          SendData(SPL06_R);                             //发送设备地址+写命令
  241   1          RecvACK();
  242   1      
  243   1          dat1 = RecvData();                           //发送设备地址+写命令
  244   1          SendACK();
  245   1          dat1 = dat1<<8;
  246   1          dat1 += RecvData();                           //发送设备地址+写命令
  247   1          SendACK();
  248   1          dat1 = dat1<<8;
  249   1          dat1 += RecvData();                           //发送设备地址+写命令
  250   1          SendNAK();
  251   1          Stop();
  252   1          JCQ06_00[cmd] = dat1;
  253   1      }
  254          
C251 COMPILER V5.60.0,  SPL06                                                              25/04/24  00:23:37  PAGE 5   

  255          
  256          
  257          
  258          
  259          
  260          //========================================================================
  261          // 函数: void SPL06_PR_R()
  262          // 描述: 测量温度（气压计）
  263          // 参数: 
  264          // 返回:
  265          // 版本: V1.0 2023.02.05
  266          //========================================================================
  267          void SPL06_PR_R()
  268          {
  269   1          IIC_W2bit(SPL06_W,0x08,0x02);//测量温度
  270   1          SleepQueue_aheadW1(15,0x0008,0);
  271   1      }
  272          
  273          //========================================================================
  274          // 函数: void SPL06_PR_R_flag0008()
  275          // 描述: 测量温度完成，读取温度数据，同时测量气压（气压计）
  276          // 参数: 
  277          // 返回:
  278          // 版本: V1.0 2023.02.05
  279          //========================================================================
  280          void SPL06_PR_R_flag0008()
  281          {
  282   1      
  283   1          if(Sleep_Queue_task[0] & 0x0008)
  284   1          {
  285   2              SPL06_R2(0x03,0x03);
  286   2              Sleep_Queue_task[0] &=~0x0008;
  287   2              IIC_W2bit(SPL06_W,0x08,0x01);//测量气压
  288   2              SleepQueue_aheadW1(15,0x0010,0);
  289   2          }
  290   1      }
  291          //========================================================================
  292          // 函数: void SPL06_PR_P_flag0010()
  293          // 描述: 测量气压完成，读取气压数据（气压计）
  294          // 参数: 
  295          // 返回:
  296          // 版本: V1.0 2023.02.05
  297          //========================================================================
  298          void SPL06_PR_P_flag0010()
  299          {
  300   1          if(Sleep_Queue_task[0] & 0x0010)
  301   1          {
  302   2              SPL06_R2(0x02,0x00);
  303   2              SPL06_Math_P(JCQ06_00[2],JCQ06_00[3]);
  304   2              Sleep_Queue_task[0] &=~0x0010;
  305   2          }
  306   1      }
  307          
  308          
  309          
  310          
  311          
  312          
  313          
  314          
  315          
  316          
  317          
  318          
  319          
  320          
C251 COMPILER V5.60.0,  SPL06                                                              25/04/24  00:23:37  PAGE 6   

  321          
  322          
  323          
  324          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1202     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        40          8
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        80     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
