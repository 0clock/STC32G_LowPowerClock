C251 COMPILER V5.60.0,  BH1745                                                             25/04/24  01:27:43  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE BH1745
OBJECT MODULE PLACED IN BH1745.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE BH1745.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) 

stmt  level    source

    1          #include "BH1745.h"
    2          #include "IIC.h"
    3          #include "time.h"
    4          #include "DATA.h"
    5          extern u8 xdata DMABuffer[32];
    6          extern u32 xdata JCQ06_00[10];
    7          
    8          
    9          extern u16 dat00[System_data_num];
   10          extern u16 dat00_low[System_data_num];
   11          extern u8 xdata dat00_flag[System_data_num];
   12          
   13          extern u16 Sleep_Queue_task[Sleep_queue_num];
   14          
   15          
   16          u16 Brightness_num[7] = {0};
   17          
   18          
   19          
   20          
   21          
   22          
   23          //========================================================================
   24          // 函数: void BH1745_Init()
   25          // 描述: BH1745初始化
   26          // 参数: 
   27          // 返回: 
   28          // 版本: V1.0 2023.02.05
   29          //========================================================================
   30          void BH1745_Init()
   31          {
   32   1          IIC_W2bit(BH1745_W,0x40,0xCB);
   33   1          delay_ms(1);
   34   1          IIC_W2bit(BH1745_W,0x41,0x00);
   35   1          delay_ms(1);
   36   1          IIC_W2bit(BH1745_W,0x42,0x02);    //0x10 活动 0x00 休眠
   37   1      }
   38          //========================================================================
   39          // 函数: void BH1745_Rdat(u8 adds)
   40          // 描述: BH1745读数据
   41          // 参数: 
   42          // 返回: 
   43          // 版本: V1.0 2023.02.05
   44          //========================================================================
   45          void BH1745_Rdat(u8 adds)
   46          {
   47   1          u16 a= 0;
   48   1          u16 b= 0;
   49   1          Start(); //发送起始命令
   50   1          SendData(BH1745_W);                             //发送设备地址+写命令
   51   1          RecvACK();
   52   1          SendData(adds);                             //发送设备地址+写命令
   53   1          RecvACK();
   54   1          Start(); //发送起始命令
   55   1          SendData(BH1745_R);                             //发送设备地址+写命令
   56   1          RecvACK();
   57   1          a = RecvData();                            //读取数据2
   58   1          SendACK();
   59   1          b = RecvData();                            //读取数据2
C251 COMPILER V5.60.0,  BH1745                                                             25/04/24  01:27:43  PAGE 2   

   60   1          SendACK();
   61   1          dat00[0x0045] = ((b<<8) + a);
   62   1          if(dat00[0x0045] & 0x8000)
   63   1          {
   64   2              dat00[0x0045] = (u16)(65536 - dat00[0x0045]);
   65   2          }
   66   1      
   67   1      
   68   1          //Stop();
   69   1      
   70   1      
   71   1          a = RecvData();                            //读取数据2
   72   1          SendACK();
   73   1          b = RecvData();                            //读取数据2
   74   1          SendACK();
   75   1          dat00[0x0046] = ((b<<8) + a);
   76   1          if(dat00[0x0046] & 0x8000)
   77   1          {
   78   2              dat00[0x0046] = (u16)(65536 - dat00[0x0046]);
   79   2          }
   80   1      
   81   1          a = RecvData();                            //读取数据2
   82   1          SendACK();
   83   1          b = RecvData();                            //读取数据2
   84   1          SendACK();
   85   1          dat00[0x0047] = ((b<<8) + a);
   86   1          if(dat00[0x0047] & 0x8000)
   87   1          {
   88   2              dat00[0x0047] = (u16)(65536 - dat00[0x0047]);
   89   2          }
   90   1      
   91   1          a = RecvData();                            //读取数据2
   92   1          SendACK();
   93   1          b = RecvData();                            //读取数据2
   94   1          SendNAK();
   95   1          dat00[0x0044] = ((b<<8) + a);
   96   1          if(dat00[0x0044] & 0x8000)
   97   1          {
   98   2              dat00[0x0044] = (u16)(65536 - dat00[0x0044]);
   99   2          }
  100   1          //发送停止命令
  101   1      }
  102          
  103          
  104          //========================================================================
  105          // 函数: void BH1745_RdatX4()
  106          // 描述: BH1745读数据光强、红光、蓝光、绿光分量
  107          // 参数: 
  108          // 返回: 
  109          // 版本: V1.0 2023.02.05
  110          //========================================================================
  111          void BH1745_RdatX4()
  112          {
  113   1          //IIC_W2bit(BH1745_W,0x42,0x10);
  114   1          //delay_ms(200);
  115   1          BH1745_Rdat(0x50);
  116   1          BH1745_Rdat(0x52);
  117   1          BH1745_Rdat(0x54);
  118   1          BH1745_Rdat(0x56);
  119   1          //IIC_W2bit(BH1745_W,0x42,0x00);
  120   1      }
  121          
  122          
  123          
  124          
  125          
C251 COMPILER V5.60.0,  BH1745                                                             25/04/24  01:27:43  PAGE 3   

  126          
  127          
  128          
  129          
  130          
  131          
  132          
  133          //========================================================================
  134          // 函数: void BH1745R_flag0002()
  135          // 描述: BH1745任务，读取光强
  136          // 参数: 
  137          // 返回: 
  138          // 版本: V1.0 2023.02.05
  139          //========================================================================
  140          void BH1745R_flag0002()
  141          {
  142   1          if(Sleep_Queue_task[0] & 0x0002)
  143   1          {
  144   2              BH1745_Rdat(0x50);
  145   2              IIC_W2bit(BH1745_W,0x42,0x02);
  146   2              Sleep_Queue_task[0] &=~0x0002;
  147   2          }
  148   1      }
  149          
  150          
  151          
  152          
  153          
  154          
  155          
  156          
  157          
  158          
  159          
  160          
  161          
  162          
  163          
  164          
  165          
  166          
  167          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       337     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        14     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        18     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
