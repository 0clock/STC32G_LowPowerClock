C251 COMPILER V5.60.0,  logic                                                              25/04/24  01:57:58  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE logic
OBJECT MODULE PLACED IN logic.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE logic.c XSMALL OPTIMIZE(9,SPEED) BROWSE DEBUG TABS(2) 

stmt  level    source

    1          #include "logic.h"
    2          #include "DATA.h"
    3          #include "OLED.h"
    4          #include "IO.h"
    5          #include "SecondaryMenu.h"
    6          
    7          
    8          extern u16 dat00[System_data_num];
    9          extern u16 dat00_low[System_data_num];
   10          extern u8 xdata dat00_flag[System_data_num];
   11          extern u16 xdata dat00_max[System_data_num];
   12          
   13          
   14          /****************************** Áù°Áú†ÂØÑÂ≠òÂô®ÁªÑ ***********************************/
   15          extern u16 Sleep_Queue[Sleep_queue_num];
   16          extern u16 Sleep_Queue_count;
   17          extern u16 Sleep_Queue_count_target;
   18          extern u16 Sleep_Queue_task[Sleep_queue_num];
   19          
   20          
   21          extern u8 Time_New[7];
   22          extern u8 Time_Low[7];
   23          extern u8 xdata Time_int[7];
   24          
   25          
   26          
   27          
   28          extern u16 jy;
   29          
   30          u8 AlarmClock_SB_flag = 0;
   31          
   32          u16 Sleep36 = 0;
   33          
   34          u32 AlarmClock_low_Memory = 0;
   35          
   36          
   37          
   38          
   39          void jump_MainMenu()     //Ë∑≥Âà∞‰∏ªËèúÂçï
   40          {
   41   1          dat00[0x10] = 0;
   42   1          dat00_low[0x17] = dat00[0x17];
   43   1          dat00[GET_SC() + 0x0f] = dat00[0x17] % GET_SCdat();
   44   1          dat00_flag[0x10] = 1;
   45   1      }
   46          
   47          void jump_SecondaryMenu()     //Ë∑≥Âà∞‰∫åÁ∫ßËèúÂçï
   48          {
   49   1          dat00[0x10] = dat00[0x11]+1;
   50   1          dat00_flag[0x10] = 1;
   51   1          dat00[0x17] = (dat00[GET_SC()] << 1)+ dat00[GET_SC() + 0x0f];
   52   1          dat00[0x18] = dat00[0x17];
   53   1          dat00_low[0x17] = dat00[0x17];
   54   1          if(dat00[0x11] == 0x06)
   55   1          {
   56   2              GET_time_c();
   57   2              dat00[0x0086] = Date_restrictions1(dat00[0x0088] ,dat00[0x0087] ,dat00[0x0086],0x0086);
   58   2          }
   59   1      
C251 COMPILER V5.60.0,  logic                                                              25/04/24  01:57:58  PAGE 2   

   60   1      }
   61          
   62          
   63          
   64          //========================================================================
   65          // ÂáΩÊï∞: SET_key()
   66          // ÊèèËø∞: Êåâ‰∏ãÁ°ÆËÆ§
   67          // ÂèÇÊï∞: 
   68          // ËøîÂõû:
   69          // ÁâàÊú¨: V1.0 2023.02.05
   70          //========================================================================
   71          void SET_key()     
   72          {
   73   1      
   74   1      //******************************************************************************
   75   1      //*
   76   1      //*     ‰∏ªËèúÂçï‰∏ãÔºå‰∏î‰∏çÂú®‰∏âÁ∫ßËèúÂçïÔºåÊåâ‰∏ãÁ°ÆÂÆöÔºåËøõÂÖ•Áõ∏Â∫îÁöÑ‰∫åÁ∫ßËèúÂçï
   77   1      //*
   78   1      //******************************************************************************
   79   1          if((dat00[0x10] == 0x0000)  && dat00[0x1A] == 0 )
   80   1          {
   81   2              
   82   2              jump_SecondaryMenu();
   83   2              
   84   2          }
   85   1          //******************************************************************************
   86   1      //*
   87   1      //*     Âú®TVÊ®°ÂºèÊó∂ÔºåÊåâ‰∏ãÁ°ÆÂÆöÊåâÈîÆÊîØÊåÅÂø´ÈÄüÊü•ËØ¢
   88   1      //*
   89   1      //******************************************************************************
   90   1          else if(dat00[0x0010] == 0x0020 || dat00[0x0010] == 0x0021 || dat00[0x0010] == 0x0022)
   91   1          {
   92   2              dat00[0x10]=0x0022;
   93   2              dat00[0x002D] = 0;
   94   2              dat00_flag[0x10]=1;
   95   2          }
   96   1      //******************************************************************************
   97   1      //*
   98   1      //*     Á≥ªÁªü‰ø°ÊÅØÁïåÈù¢ÔºåÊåâ‰∏ãÁ°ÆËÆ§‰πüÊòØËøîÂõû‰∏ªËèúÂçï
   99   1      //*
  100   1      //******************************************************************************
  101   1          else if(dat00[0x10] == 0x000F && dat00[0x1A] == 0)
  102   1          {
  103   2              jump_MainMenu();
  104   2          }
  105   1      //******************************************************************************
  106   1      //*
  107   1      //*     Âú®‰∫åÁ∫ßËèúÂçïÔºà‰∏î‰Ω†Âú®‰∏âÁ∫ßËèúÂçïÔºâ‰∏çÂèØ‰øÆÊîπÂÄºÊåâ‰∏ãÁ°ÆÂÆö
  108   1      //*
  109   1      //******************************************************************************
  110   1          else if((dat00_max[GET_SCdat3()] == 0x1001 ) && dat00[0x1A] == 0)
  111   1          {
  112   2              dat00[GET_SCdat3()] ^= 0x0001;
  113   2              dat00_low[GET_SCdat3()] = dat00[GET_SCdat3()];
  114   2              if(dat00[0x10] == 0x0001 && dat00[0x2F] == 0x0000) dat00_flag[0x0021] = 1;
  115   2              dat00[0]  |=0x0400;
  116   2              dat00[0]  |=0x0200;     
  117   2          }
  118   1      //******************************************************************************
  119   1      //*
  120   1          //*     Ôºà‰∏çÂú®‰∏âÁ∫ßËèúÂçï‰∏ãÔºâÊåâ‰∫Ü‰∏çÂèØ‰øÆÊîπÁöÑÂÄº
  121   1      //*
  122   1      //******************************************************************************    
  123   1          else if((dat00_max[GET_SCdat3()] & 0x0080 ) && dat00[0x1A] == 0)
  124   1          {
  125   2              if(dat00[0x10] == 0x0001 && dat00[0x2F] == 0x0005)//ËøõÂÖ•Ê†áÂáÜTVÊ®°Âºè
C251 COMPILER V5.60.0,  logic                                                              25/04/24  01:57:58  PAGE 3   

  126   2              {
  127   3                  dat00[0x10] = 0x0020;
  128   3                  dat00[0x002D] = 0;
  129   3                  dat00[0x37] = 0;
  130   3                  dat00[0x26] = 1;
  131   3                  dat00[0] &= ~0x0040;
  132   3                  dat00[0] &= ~0x0080;
  133   3                  dat00_flag[0x10] = 1;
  134   3              }
  135   2              else if(dat00[0x10] == 0x0002 && dat00[0x3F] == 0x0006)//ËøõÂÖ•‰ΩéÂäüËÄóÊ®°Âºè
  136   2              {
  137   3      
  138   3                  dat00[0x37] = 1;//ËÆ∞‰ΩèÊ≠§Êó∂‰∏∫‰ΩéÂäüËÄóÊ®°Âºè
  139   3                  dat00[0x26] = 0;
  140   3                  dat00_flag[0x37] = 1;
  141   3                  dat00[0] &= ~0x0040;
  142   3              }
  143   2              else if(dat00[0x10] == 0x0007 && dat00[0x008F] == 0x0000)//ËÆæÁΩÆÊó∂Èó¥
  144   2              {
  145   3                  jump_MainMenu();
  146   3                  dat00_flag[0x81] = 1;
  147   3              }
  148   2          }
  149   1      //******************************************************************************
  150   1      //*
  151   1      //*     Âú®‰∫åÁ∫ßËèúÂçïÔºà‰∏î‰Ω†Âú®‰∏âÁ∫ßËèúÂçï„ÄÅ‰∏çÊòØÊåáÂçóÈíàËèúÂçïÔºâÊåâ‰∏ãÁ°ÆÂÆöÔºåËøõÂÖ•‰∏âÁ∫ßËèúÂçï
  152   1      //*
  153   1      //******************************************************************************
  154   1          else if(dat00[0x10] >= 0x0001 && dat00[0x10] <= 0x0010 && dat00[0x1A] == 0 && dat00[0x10] != 0x0005 &
             -& dat00[0x10] != 12)
  155   1          {
  156   2              dat00[0x1A] = 1;
  157   2              dat00_flag[0x10] = 1;
  158   2          }
  159   1      //******************************************************************************
  160   1      //*
  161   1      //*     Âú®‰∏âÁ∫ßËèúÂçïÔºàÈùûÊåáÂçóÈíàËèúÂçïÔºâÊåâ‰∏ãÁ°ÆÂÆöÔºåÂõûÂà∞‰∫åÁ∫ßËèúÂçï
  162   1      //*
  163   1      //******************************************************************************
  164   1          else if(dat00[0x10] >= 0x0001 && dat00[0x10] <= 0x0010 && dat00[0x1A] == 1 && dat00[0x10] != 0x0005 &
             -& dat00[0x10] != 12)
  165   1          {
  166   2              if(dat00[0x10] == 0x0007 && ((dat00[0x008F] == 0x0006) ||  (dat00[0x008F] == 0x0007) ))//Êõ¥Êîπ‰∫
             -ÜÂπ¥ÂíåÊúà
  167   2              {
  168   3                  dat00[0x0086] = Date_restrictions1(dat00[0x0088] ,dat00[0x0087] ,dat00[0x0086],0x0086);
  169   3              }
  170   2              dat00[0]  |=0x0200;
  171   2              dat00[0x1A] = 0;
  172   2              dat00_flag[0x10] = 1;
  173   2              dat00_low[GET_SCdat3()] = dat00[GET_SCdat3()];
  174   2          }
  175   1          else
  176   1          {
  177   2              jump_MainMenu();
  178   2          }
  179   1          dat00[0x0008] = 60;//Êó†Êìç‰ΩúÂÄíËÆ°Êó∂Êõ¥Êñ∞
  180   1      
  181   1      }
  182          
  183          
  184          
  185          
  186          
  187          
  188          
C251 COMPILER V5.60.0,  logic                                                              25/04/24  01:57:58  PAGE 4   

  189          
  190          
  191          
  192          //========================================================================
  193          // ÂáΩÊï∞: void ESC_key()
  194          // ÊèèËø∞: Êåâ‰∏ãÈÄÄÂá∫
  195          // ÂèÇÊï∞: 
  196          // ËøîÂõû:
  197          // ÁâàÊú¨: V1.0 2023.02.05
  198          //========================================================================
  199          void ESC_key()     //‰∫åÁ∫ßËèúÂçï Êåâ‰∏ãÈÄÄÂá∫
  200          {
  201   1          u8 pp = 0;
  202   1        
  203   1           if((dat00[0x10] >= 0x0001 && dat00[0x10] <= 0x0010 && dat00[0x1A] == 0) || (dat00[0x10] >= 0x0020 &&
             - dat00[0x10] <= 0x0022))//Âú®‰∫åÁ∫ßËèúÂçïÔºåË∑≥Âõû‰∏ªËèúÂçï
  204   1          {
  205   2              dat00_low[0x0010] = dat00[0x0010];
  206   2              jump_MainMenu();
  207   2      
  208   2          }
  209   1          else if(dat00[0x10] >= 0x0001 && dat00[0x10] <= 0x0010 && dat00[0x1A] == 1)//‰∏âÁ∫ßËèúÂçïÔºåË∑≥Âõû‰∏ª
             -ËèúÂçï
  210   1          {
  211   2              dat00[0x1A] = 0;
  212   2              dat00_flag[0x10] = 1;
  213   2              dat00[GET_SCdat3()] = dat00_low[GET_SCdat3()];
  214   2              dat00_flag[GET_SCdat3()] = 1;
  215   2              jy=0;
  216   2          }
  217   1          else
  218   1          {
  219   2              jump_MainMenu();
  220   2      
  221   2          }
  222   1          dat00[0x0008] = 60;//Êó†Êìç‰ΩúÂÄíËÆ°Êó∂Êõ¥Êñ∞
  223   1      }
  224          
  225          //========================================================================
  226          // ÂáΩÊï∞: void Add_key(u8 a) 
  227          // ÊèèËø∞: Êåâ‰∏ã+ -
  228          // ÂèÇÊï∞: aÔºö 1ÊòØÂä† 0ÊòØÂáè
  229          // ËøîÂõû:
  230          // ÁâàÊú¨: V1.0 2023.02.05
  231          //========================================================================
  232          void Add_key(u8 a)   //‰∏ªËèúÂçï Êåâ‰∏ã+
  233          {
  234   1          if(dat00[0x10] == 0x0005)//ÊåáÂçóÈíàÊåâ‰∏ãÔºåÊ∏ÖÈô§Ê†°ÂáÜÊï∞ÊçÆ
  235   1          {
  236   2              dat00[0x0064] = 0;
  237   2              dat00_low[0x0064] = 0;
  238   2              dat00[0x0065] = 0;
  239   2              dat00_low[0x0065] = 0;
  240   2              dat00[0x0066] = 0;
  241   2              dat00_low[0x0066] = 0;
  242   2              dat00[0x0067] = 0;
  243   2              dat00_low[0x0067] = 0;
  244   2              dat00[0x0069] = 0;
  245   2              dat00[0x006A] = 0;
  246   2          }
  247   1          else if(dat00[0x10] == 12)//ÊâãÁîµÁ≠íÊåâ‰∏ãÔºåÂä†ÂáèÁîµÂéã
  248   1          {
  249   2              data00_Change(0x0052,a);
  250   2              dat00_flag[0x0052] = 1;
  251   2          }
  252   1          else if(dat00[0x10] == 0x0000 && dat00[0x1A] == 0)//‰∏ªËèúÂçïÊåâ‰∏ãÔºåÂä†Âáè‰∏ªËèúÂçïÂÖâÊ†á
C251 COMPILER V5.60.0,  logic                                                              25/04/24  01:57:58  PAGE 5   

  253   1          {
  254   2              data00_Change(0x14,a);
  255   2          }
  256   1          else if(dat00[0x10] > 0 && dat00[0x10] < 16 && dat00[0x1A] == 0)//‰∫åÁ∫ßËèúÂçïÊåâ‰∏ãÔºåÂä†Âáè‰∏ªËèúÂç
             -ï‰∫åÁ∫ßÂÖâÊ†á
  257   1          {
  258   2              data00_Change(0x17,a);
  259   2          }
  260   1          else if(dat00[0x1A] == 1)
  261   1          {
  262   2              //data00_Change((u8)GET_SCdat3(),a);
  263   2          }
  264   1      
  265   1      
  266   1          if(dat00[0x0010] == 0x0020 || dat00[0x0010] == 0x0021 || dat00[0x0010] == 0x0022)//TVÊ®°ÂºèÂø´ÈÄüÊü•Ë
             -Ø¢
  267   1          {
  268   2              if(a)
  269   2              {
  270   3                  dat00[0x10]=0x0021;
  271   3                  dat00[0x002D] = 0;
  272   3                  dat00_flag[0x10]=1;
  273   3              }
  274   2              else
  275   2              {
  276   3                  dat00[0x10]=0x0020;
  277   3                  dat00[0x002D] = 0;
  278   3                  dat00_flag[0x10]=1;
  279   3              }
  280   2          }
  281   1          dat00[0x0008] = 60;//Êó†Êìç‰ΩúÂÄíËÆ°Êó∂Êõ¥Êñ∞
  282   1      
  283   1      
  284   1      
  285   1      
  286   1      
  287   1      }
  288          
  289          //========================================================================
  290          // ÂáΩÊï∞: void key_thread1_new()
  291          // ÊèèËø∞: ÊåâÈîÆÂ£∞Èü≥Ëß¶Âèë
  292          // ÂèÇÊï∞: 
  293          // ËøîÂõû:
  294          // ÁâàÊú¨: V1.0 2023.02.05
  295          //========================================================================
  296          void key_thread1_new()
  297          {
  298   1          if(dat00[0] & 0x0001)
  299   1          {
  300   2      
  301   2              SleepQueue_aheadW1(6,0x0101,0);
  302   2      
  303   2      
  304   2              if(dat00[0xC3] == 1)
  305   2              {
  306   3                  if(dat00[0xC1] == 1)
  307   3                  {
  308   4                      Buzzer_Open();
  309   4                      SleepQueue_aheadW1(dat00[0xC2],0x0020,0);
  310   4                    
  311   4                  }
  312   3              }
  313   2              dat00[0] &= ~0x0001;
  314   2          }
  315   1      }
  316          
C251 COMPILER V5.60.0,  logic                                                              25/04/24  01:57:58  PAGE 6   

  317          
  318          
  319          
  320          
  321          
  322          
  323          
  324          
  325          
  326          
  327          
  328          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1101     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         7     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        19     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
